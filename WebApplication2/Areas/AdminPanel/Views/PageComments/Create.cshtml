@model DAl.PageComment

@{
    ViewBag.Title = "نظر جدید";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-lg-12">
        <br />
        <div class="panel panel-default">
            <div class="panel-heading"><h3>نظر جدید</h3></div>
            <div class="panel-body">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.LabelFor(model => model.Page.PageGroup.GroupTitle, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12"})
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.DropDownList("GroupID", null, htmlAttributes: new { @class = "form-control", style = "Height:40px", id = "ddlGroupID" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.Page.PageTitle, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12" })
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.DropDownList("PageID", null, htmlAttributes: new { @class = "form-control", style = "Height:40px" ,id= "ddlPageID"})
                            @Html.ValidationMessageFor(model => model.PageID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12" })
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12" })
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12" })
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-12 col-xs-12" })
                    <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <textarea name="Comment" class="form-control" cols="30" rows="7"></textarea>
                            @*@Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="col-lg-offset-2 col-lg-2 col-md-offset-2 col-md-2 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <input type="submit" value="ایجاد" class="btn btn-success btn-block" />
                        </div>
                    </div>
                </div>

                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="col-lg-offset-2 col-lg-2 col-md-offset-2 col-md-2 col-sm-12 col-xs-12">
                        <div class="form-group">
                            @Html.ActionLink("بازگشت", "Index", null, htmlAttributes: new { @Class = "btn btn-primary btn-block" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script >
    $('#ddlGroupID').change(function () {
        jQuery.getJSON('@Url.Action("SelectPage", "PageComments")', { id: $(this).val() }, function (data) {
            $('#ddlPageID').empty();
            jQuery.each(data, function (i) {
                var option = $('<option></option>').val(data[i].PageID).text(data[i].PageTitle);
                $("#ddlPageID").append(option);
            });
        });
    });
</script>
